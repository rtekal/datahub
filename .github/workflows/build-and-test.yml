name: build & test
on:
  push:
    branches:
      - master
    paths-ignore:
      - "docs/**"
      - "**.md"
  pull_request:
    branches:
      - "**"
    paths-ignore:
      - "docs/**"
      - "**.md"
  release:
    types: [published]

concurrency:
  group: ${{ github.workflow }}-${{ github.event.pull_request.number || github.ref }}
  cancel-in-progress: true

jobs:
  build:
    strategy:
      fail-fast: false
      matrix:
        command: [
            # metadata-ingestion and airflow-plugin each have dedicated build jobs
            "except_metadata_ingestion",
            "frontend",
          ]
        timezone: ["UTC", "America/New_York"]
    runs-on: ubuntu-latest
    timeout-minutes: 60
    steps:
      - uses: szenius/set-timezone@v1.0
        with:
          timezoneLinux: ${{ matrix.timezone }}
      - uses: hsheth2/sane-checkout-action@v1
      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          distribution: "zulu"
          java-version: 17
      - uses: actions/setup-python@v4
        with:
          python-version: "3.10"
          cache: pip
      - name: Gradle build (and test) for metadata ingestion
        # we only need the timezone runs for frontend tests
        if: ${{  matrix.command == 'except_metadata_ingestion' && matrix.timezone == 'America/New_York' }}
        run: |
          ./gradlew build -x :metadata-ingestion:build -x :metadata-ingestion:check -x docs-website:build -x :metadata-integration:java:spark-lineage:test -x :metadata-io:test -x :metadata-ingestion-modules:airflow-plugin:build -x :metadata-ingestion-modules:airflow-plugin:check -x :datahub-frontend:build -x :datahub-web-react:build --parallel
      - name: Gradle build (and test) for frontend
        if: ${{  matrix.command == 'frontend' }}
        run: |
          ./gradlew :datahub-frontend:build :datahub-web-react:build --parallel
        env:
          NODE_OPTIONS: "--max-old-space-size=3072"
      - uses: actions/upload-artifact@v3
        if: always()
        with:
          name: Test Results (build)
          path: |
            **/build/reports/tests/test/**
            **/build/test-results/test/**
            **/junit.*.xml
      - name: Ensure codegen is updated
        uses: ./.github/actions/ensure-codegen-updated
      - name: Slack failure notification
        if: failure() && github.event_name == 'push'
        uses: kpritam/slack-job-status-action@v1
        with:
          job-status: ${{ job.status }}
          slack-bot-token: ${{ secrets.SLACK_BOT_TOKEN }}
          channel: github-activities

  quickstart-compose-validation:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-python@v4
        with:
          python-version: "3.10"
      - name: Download YQ
        uses: chrisdickinson/setup-yq@v1.0.1
        with:
          yq-version: v4.28.2
      - name: Quickstart Compose Validation
        run: ./docker/quickstart/generate_and_compare.sh

  event-file:
    runs-on: ubuntu-latest
    steps:
      - name: Upload
        uses: actions/upload-artifact@v3
        with:
          name: Event File
          path: ${{ github.event_path }}
